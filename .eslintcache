[{"/Users/cull/Projects/project3/mycookbook-client/src/reportWebVitals.js":"1","/Users/cull/Projects/project3/mycookbook-client/src/components/App.js":"2","/Users/cull/Projects/project3/mycookbook-client/src/index.js":"3","/Users/cull/Projects/project3/mycookbook-client/src/components/API/WebRecipes.js":"4","/Users/cull/Projects/project3/mycookbook-client/src/components/API/RecipeList.js":"5","/Users/cull/Projects/project3/mycookbook-client/src/components/registrations/Login.js":"6","/Users/cull/Projects/project3/mycookbook-client/src/components/registrations/Signup.js":"7","/Users/cull/Projects/project3/mycookbook-client/src/components/Home.js":"8","/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipesIndex.js":"9","/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipeShow.js":"10","/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipeForm.js":"11"},{"size":362,"mtime":1606692922135,"results":"12","hashOfConfig":"13"},{"size":2591,"mtime":1606946578353,"results":"14","hashOfConfig":"13"},{"size":511,"mtime":1606693016571,"results":"15","hashOfConfig":"13"},{"size":1841,"mtime":1606993257893,"results":"16","hashOfConfig":"13"},{"size":542,"mtime":1606978936277,"results":"17","hashOfConfig":"13"},{"size":2418,"mtime":1606995054143,"results":"18","hashOfConfig":"13"},{"size":2568,"mtime":1606995070530,"results":"19","hashOfConfig":"13"},{"size":1258,"mtime":1606994935493,"results":"20","hashOfConfig":"13"},{"size":2075,"mtime":1606994534755,"results":"21","hashOfConfig":"13"},{"size":2283,"mtime":1606990267143,"results":"22","hashOfConfig":"13"},{"size":3265,"mtime":1606993896278,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7xg0gt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/cull/Projects/project3/mycookbook-client/src/reportWebVitals.js",[],["53","54"],"/Users/cull/Projects/project3/mycookbook-client/src/components/App.js",[],["55","56"],"/Users/cull/Projects/project3/mycookbook-client/src/index.js",[],["57","58"],"/Users/cull/Projects/project3/mycookbook-client/src/components/API/WebRecipes.js",["59","60"],"import React, { Component, useEffect, useState } from 'react';\nimport RecipeList from './RecipeList'\nimport {Link} from 'react-router-dom';\n\nconst WebRecipes = () => {\n  //Edamam API\n  const APP_ID = \"b0bb70b1\";\n  const APP_KEY = \"e08ebce3aa48d4cd5bb39c904c1067e4\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect( () => {\n    edamamRecipes();\n  }, [query]);\n\n  const edamamRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const _updateSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const _getSearch = (event) => {\n    event.preventDefault();\n    setQuery(search);\n  }\n  return (\n    <div>\n      <h1 className='API-title'>Inspiration from the web</h1>\n      <Link to=\"/recipesindex\"\n        className='create-link a' >\n        Recipes\n      </Link>\n      <Link to=\"/recipesindex\"\n        className='create-link' >\n        Create New Recipe\n      </Link>\n      <form onSubmit={_getSearch}>\n        <input className=\"API-search\"\n          type=\"text\"\n          value={search}\n          onChange={_updateSearch}\n          placeholder=\"Chicken\"\n         />\n        <button className=\"API-search\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {recipes.map(result => (\n        <RecipeList\n          key={result.recipe.label}\n          title={result.recipe.label}\n          image={result.recipe.image}\n          serves={result.recipe.yield}\n          time={result.recipe.totalTime}\n          ingredients={result.recipe.ingredients}\n          link={result.recipe.url}\n        />\n      ))}\n    </div>\n  );\n};\n\n\nexport default WebRecipes;\n","/Users/cull/Projects/project3/mycookbook-client/src/components/API/RecipeList.js",[],"/Users/cull/Projects/project3/mycookbook-client/src/components/registrations/Login.js",[],"/Users/cull/Projects/project3/mycookbook-client/src/components/registrations/Signup.js",[],"/Users/cull/Projects/project3/mycookbook-client/src/components/Home.js",["61","62","63"],"import React from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport WebRecipes from './API/WebRecipes';\nimport RecipesShow from './recipes/RecipeShow';\nimport RecipesIndex from './recipes/RecipesIndex';\nimport './styling.css';\n\nconst Home = (props) => {\n\n  const handleClick = () => {\n      axios.delete('http://localhost:3001/logout', {withCredentials: true})\n      .then(response => {\n        props.handleLogout()\n        props.history.push('/')\n      })\n      .catch(error => console.log(error))\n    }\n\n\n\n  return (\n    <div>\n    <div className='centered'>\n      <h1 className='login-page'>Welcome to myCookBook</h1>\n      <Link to='/login' className='rego-link'>Log In</Link>\n      <br></br>\n      <Link to='/signup' className='rego-link'>Sign Up</Link>\n      <br></br>\n\n\n\n\n    </div>\n    {\n      props.loggedInStatus ?\n      <Link to='/logout' className='create-link b' onClick={handleClick}>Log Out</Link> :\n      null\n    }\n    {\n      props.loggedInStatus ?\n      <Link to='/recipesindex' className='create-link a'>Recipe list</Link> :\n      null\n    }\n    {\n      props.loggedInStatus ?\n      <Link to='/webrecipes' className='create-link'>Inspiration</Link> :\n      null\n    }\n  </div>\n  );\n};\n\nexport default Home;\n","/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipesIndex.js",["64","65"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nclass RecipesIndex extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: []\n    };\n  }\n\n  componentDidMount() {\n      const url = \"http://localhost:3001/recipes/index\";\n      fetch(url)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Network response was not ok.\");\n        })\n        .then(response => this.setState({ recipes: response }))\n        .catch(() => this.props.history.push(\"/\"));\n  }\n\n  render() {\n    const { recipes } = this.state;\n    const allRecipes = recipes.map((recipe, index) => (\n      <div key={index}>\n        <div className=\"recipe-show-container\">\n          <a href={`/recipe/${recipe.id}`}><img className=\"recipesImage\"\n            src={recipe.image}\n            alt={`${recipe.dish} image`}\n          /></a>\n        <div>\n            <h1>{recipe.dish}</h1>\n          </div>\n        </div>\n      </div>\n    ));\n    const noRecipe = (\n      <div>\n        <h4>\n          No recipes yet. Why not <Link to=\"/new_recipe\">create one</Link>\n        </h4>\n      </div>\n    );\n\n    return (\n      <>\n        <section>\n          <div>\n            <h1 className='API-title'>Recipes for every occasion</h1>\n          </div>\n        </section>\n        <div>\n          <main>\n            <div>\n              <Link to=\"/recipe\" className='create-link'>\n                Create New Recipe\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/webrecipes\"\n                className='create-link a' >\n                Inspiration\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/\"\n                className='create-link b' >\n                Home\n              </Link>\n            </div>\n            <div>\n              {recipes.length > 0 ? allRecipes : noRecipe}\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\n\n\n\n\n\nexport default RecipesIndex;\n","/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipeShow.js",["66"],"/Users/cull/Projects/project3/mycookbook-client/src/components/recipes/RecipeForm.js",["67","68","69","70","71","72"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dish: \"\",\n      image: \"\",\n      serves: \"\",\n      time: \"\",\n      ingredients: \"\",\n      method: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\n  }\n\n  stripHtmlEntities(str) {\n    return String(str)\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\");\n  }\n\n\n    onChange(event) {\n      this.setState({ [event.target.dish]: event.target.value });\n    }\n\n    onSubmit(event) {\n      event.preventDefault();\n      const url = \"http://localhost:3001/recipes/create\";\n      const { dish, image, serves, time, ingredients, method } = this.state;\n\n      if (dish.length == 0 || ingredients.length == 0 || method.length == 0)\n        return;\n\n      const body = {\n        dish,\n        ingredients,\n        method: method.replace(/\\n/g, \"<br> <br>\")\n      };\n\n      const token = document.querySelector('meta[name=\"csrf-token\"]').content;\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Network response was not ok.\");\n        })\n        .then(response => this.props.history.push(`/recipe/${response.id}`))\n        .catch(error => console.log(error.message));\n    }\n\n    render() {\n      return (\n        <div>\n          <div>\n            <div>\n\n              <form  onSubmit={this.onSubmit}\n                className=\"api-recipe-column\">\n                <h1 className='API-title'>\n                  Create New Recipe\n                </h1>\n                <div>\n                  <label htmlFor=\"recipeName\">Recipe name</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"recipeIngredients\">Ingredients</label>\n                  <input\n                    type=\"text\"\n                    name=\"ingredients\"\n                    required\n                    onChange={this.onChange}\n                  />\n                  <small>\n                    Separate each ingredient with a comma.\n                  </small>\n                </div>\n                <label htmlFor=\"instruction\">Method:</label>\n                <textarea\n                  name=\"instruction\"\n                  rows=\"5\"\n                  required\n                  onChange={this.onChange}\n                />\n                <button type=\"submit\">\n                  Create Recipe\n                </button>\n                <Link to=\"/recipesindex\">\n                  <button className='show-title'>\n                  Back to recipes\n                  </button>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default RecipeForm;\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":16,"column":6,"nodeType":"87","endLine":16,"endColumn":13,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":18},{"ruleId":"81","severity":1,"message":"90","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"91","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"92","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":33,"column":44,"nodeType":"95","endLine":36,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":54,"column":10,"nodeType":"95","endLine":57,"endColumn":12},{"ruleId":"81","severity":1,"message":"96","line":35,"column":21,"nodeType":"83","messageId":"84","endLine":35,"endColumn":26},{"ruleId":"81","severity":1,"message":"97","line":35,"column":28,"nodeType":"83","messageId":"84","endLine":35,"endColumn":34},{"ruleId":"81","severity":1,"message":"98","line":35,"column":36,"nodeType":"83","messageId":"84","endLine":35,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":37,"column":23,"nodeType":"101","messageId":"102","endLine":37,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":37,"column":50,"nodeType":"101","messageId":"102","endLine":37,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":37,"column":72,"nodeType":"101","messageId":"102","endLine":37,"endColumn":74},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],["103"],["104"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'edamamRecipes'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'WebRecipes' is defined but never used.","'RecipesShow' is defined but never used.","'RecipesIndex' is defined but never used.","'axios' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'image' is assigned a value but never used.","'serves' is assigned a value but never used.","'time' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [edamamRecipes, query]",{"range":"108","text":"109"},[454,461],"[edamamRecipes, query]"]